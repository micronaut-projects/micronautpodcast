import com.micronautpodcast.PodcastSitePlugin

plugins {
  id "base"
  id "groovycalamari.podcast" version "0.0.5"
}

apply plugin: PodcastSitePlugin

podcastMetadata {
    github = 'https://github.com/micronaut-projects/'
    gitter = 'https://matrix.to/#/#micronautfw_questions:gitter.im'
    mail = 'info@micronaut.io'
    linkedin='https://www.linkedin.com/showcase/micronaut/'
    artwork = 'https://media.micronautpodcast.com/artwork-landscape.png'
    rss = 'https://feed.micronautpodcast.com/rss.xml'
    twitter = 'micronautfw'
    radioPublic = 'https://radiopublic.com/micronaut-podcast-8XQ3Dq'
    applePodcasts = 'https://podcasts.apple.com/podcast/micronaut-podcast/id1592662619'
    iTunesId = '1592662619'
    amazon = 'https://music.amazon.com/podcasts/59bb32ad-1c64-4982-8582-31bd8546c994'
    spotify = 'https://open.spotify.com/show/6jnGL4U0t7QqCqQ9LP0lpP'
    pocketCasts='https://pca.st/3u029uf7'
    youtube = 'https://www.youtube.com/@MicronautFramework'
    outputDirectory = file('build/dist')
    template = file('assets/templates/index.html')
    episodeTemplate = file('assets/templates/episode.html')
    audioTemplate = file('assets/templates/audio.html')
    showNotesTemplate = file('assets/templates/showNotes.html')
    rssFile = file('build/rss.xml')
}
buildPodcastSite.dependsOn('podcastFeed')

podcast {
    episodes = file("episodes")
    title = 'The Micronaut Podcast'
    link = 'https://micronautpodcast.com'
    language = 'en'
    copyright = '&#169; 2021 Micronaut Foundation'
    description = 'Episodes cover a variety of topics (interviews, tips, news...) surrounding the Micronaut framework.'
    author = "Sergio del Amo"
    type = 'EPISODIC'
    owner {
        name = "Micronaut Foundation"
        email = "marketing@micronaut.io"
    }
    image {
        url = "https://media.micronautpodcast.com/artwork.png"
        link = 'https://micronautpodcast.com'
        title = 'Micronaut Podcast'
        width = 3000
        height = 3000
    }
    block = false
    categories = 'TECHNOLOGY_SOFTWARE_HOWTO'
    explicit = false
}
podcastMedia {
    inputDirectory = file('mp3')
}

task copyMedia(type: Copy) {
    from file("media")
    into file("build/dist")
    include("*.png")    
}
build.dependsOn('copyMedia')
task copyMp3(type: Copy) {
    from file("mp3")
    into file("build/dist")
    include("*.mp3")    
}
build.dependsOn('copyMp3')

task copyFeed(type: Copy) {
    dependsOn("podcastFeed")
    from file("build")
    into file("build/dist")
    include("rss.xml")
}
build.dependsOn('copyFeed')

task copyImages(type: Copy) {
    from file("assets/images")
    into file("build/dist/assets/images")    
    include('*.svg')
    include('*.ico')
    include('*.png')
}

task copyAssets {
    dependsOn 'copyImages'
}

build.dependsOn(copyAssets)
